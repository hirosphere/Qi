import { Leaf, Model } from "../../meh/index.js";
import { Selector } from "../../meh/model/Selector.js";
import { csv as siteListCSV } from "./sitepub_all_utf8.js";
const log = console.log;
class Item {
    __ru = Symbol();
    fn() { }
}
const list = new Model.Order();
const item1 = new Item();
list.add(item1);
list.add(item1);
list.add(new Item);
list.add(new Item);
list.add(new Item);
list.items.forEach(item => item.fn());
//  //
export var APP;
(function (APP) {
    class UIM {
        hoverCurrent = new SiteHover(null);
    }
    APP.UIM = UIM;
    const SiteHoverPane = (hover) => {
        const info = new Leaf.String("");
        hover.createRef(site => info.value = site ? `${site?.code} ${site.name} ${site.name_r} - ${site.pref}` : "...");
        return { type: "div", text: info };
    };
    APP.UI = () => {
        const uim = new UIM();
        const parts = [
            { type: "h2", text: "EQ-Map" },
            SiteHoverPane(uim.hoverCurrent),
            Map.UI(uim.hoverCurrent),
        ];
        return { type: "div", class: "EQ-Map", parts };
    };
})(APP || (APP = {}));
var Map;
(function (Map) {
    // GUI model //
    class UIM {
        sites = getSiteList();
        selector = new Selector;
    }
    // GUI //
    const MapPoint = (selector, site, hover) => {
        const ref = selector.makeRef(site);
        const size = 5;
        const off = size / 2;
        const style = {
            position: "absolute",
            top: String((700 - (site.lat - 23) * 29) - off) + "px",
            left: String(((site.long - 122.5) * 29) - off) + "px",
            width: String(size) + "px",
            height: String(size) + "px",
            borderRadius: String(3) + "px",
            cursor: "default"
        };
        const click = () => ref?.select();
        const mouseover = () => hover.value = site;
        const attrs = {
            selected: ref?.selected
        };
        return { type: "div", class: "map-point", attrs, style, acts: { click, mouseover } };
    };
    Map.UI = (hover) => {
        const uim = new UIM();
        uim.selector;
        const parts = [];
        const keys = Object.keys(uim.sites);
        keys.forEach(key => parts.push(MapPoint(uim.selector, uim.sites[key], hover)));
        const style = {
            background: "hsl( 205, 85%, 80% )",
            height: "700px",
            position: "relative",
            display: "absolute"
        };
        return { type: "div", class: "map", style, parts };
    };
})(Map || (Map = {}));
class SiteHover extends Leaf {
}
const rand = (obj, keys) => {
    const i = Math.floor(Math.random() * keys.length);
    const key = keys[i];
    return obj[key];
};
let siteList = null;
const getSiteList = () => {
    if (siteList)
        return siteList;
    const lines = siteListCSV.split("\n");
    const rt = {};
    for (const line of lines) {
        const [code, name, name_r, lat, long, depth, x1, pref, pref_r, lat_j, long_j, x2, x3, x4, x5] = line.split(",");
        rt[code] = { __ru: Symbol(), code, name, name_r, lat: Number(lat), long: Number(long), depth, x1, pref, pref_r, lat_j, long_j, x2, x3, x4, x5 };
    }
    return siteList = rt;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdHMtc3JjL2FwcHMvRVEvTWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBVyxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxHQUFHLElBQUksV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFM0QsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQztBQUV4QixNQUFNLElBQUk7SUFBRyxJQUFJLEdBQUcsTUFBTSxFQUFFLENBQUU7SUFBQyxFQUFFLEtBQUcsQ0FBQztDQUFFO0FBRXZDLE1BQU0sSUFBSSxHQUFHLElBQUksS0FBSyxDQUFDLEtBQUssRUFBWSxDQUFDO0FBRXpDLE1BQU0sS0FBSyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7QUFFekIsSUFBSSxDQUFDLEdBQUcsQ0FBRSxLQUFLLENBQUUsQ0FBQztBQUNsQixJQUFJLENBQUMsR0FBRyxDQUFFLEtBQUssQ0FBRSxDQUFDO0FBQ2xCLElBQUksQ0FBQyxHQUFHLENBQUUsSUFBSSxJQUFJLENBQUUsQ0FBQztBQUNyQixJQUFJLENBQUMsR0FBRyxDQUFFLElBQUksSUFBSSxDQUFFLENBQUM7QUFDckIsSUFBSSxDQUFDLEdBQUcsQ0FBRSxJQUFJLElBQUksQ0FBRSxDQUFDO0FBRXJCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFFLENBQUM7QUFFeEMsTUFBTTtBQUVOLE1BQU0sS0FBVyxHQUFHLENBNkJuQjtBQTdCRCxXQUFpQixHQUFHO0lBRW5CLE1BQWEsR0FBRztRQUVmLFlBQVksR0FBRyxJQUFJLFNBQVMsQ0FBRSxJQUFJLENBQUUsQ0FBQztLQUNyQztJQUhZ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