import { Leaf } from "../meh/index.js";
import { Range } from "../range.js";
const log = console.log;
//  //
export var Rail;
(function (Rail) {
    class Value {
        name;
        speed;
        max;
        bias;
        idle;
        voltage;
        constructor(name) {
            const rel = () => this.update();
            this.name = Leaf.String.make(name);
            this.speed = new Leaf.Number(0, { rel });
            this.max = new Leaf.Number(330, { rel });
            this.bias = new Leaf.Number(1.6, { rel });
            this.idle = new Leaf.Number(0.8, { rel });
            this.voltage = new Leaf.Number(0);
        }
        update() {
            const swing = 12 - this.bias.value;
            const voltage = swing * (this.speed.value / this.max.value) + this.bias.value;
            this.voltage.value = this.speed.value > 0 ? voltage : this.idle.value;
        }
    }
    Rail.Value = Value;
    class UIM {
        name;
        speed;
        max;
        bias;
        idle;
        voltage;
        constructor(value) {
            this.name = value.name;
            this.max = new Range.UIM({ title: "Max", unit: "km/h", min: 10, max: 700, value: value.max });
            this.speed = new Range.UIM({ title: "Speed", unit: "km/h", min: 0, max: value.max, value: value.speed });
            this.bias = new Range.UIM({ title: "Bias", unit: "V", min: 0, max: 12, step: 0.1, value: value.bias });
            this.idle = new Range.UIM({ title: "Idle", unit: "V", min: 0, max: 12, step: 0.1, value: value.idle });
            this.voltage = new Leaf.String("");
            value.voltage.createRef(() => this.voltage.value = String(Math.round(value.voltage.value * 100) / 100) + "V");
        }
    }
    Rail.UIM = UIM;
    Rail.UI = (uim) => {
        const header = { type: "h2", text: uim.name };
        const voltage = { type: "div", text: uim.voltage };
        const speed = Range.UI(uim.speed);
        const max = Range.UI(uim.max);
        const bias = Range.UI(uim.bias);
        const idle = Range.UI(uim.idle);
        const ranges = { type: "div", class: "ranges", parts: [voltage, speed, max, bias, idle] };
        return { type: "div", class: "applet rail", parts: [header, ranges] };
    };
})(Rail || (Rail = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFpbC0xLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdHMtc3JjL2FwcHMvcmFpbC0xLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3BDLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFFeEIsTUFBTTtBQUVOLE1BQU0sS0FBVyxJQUFJLENBK0RwQjtBQS9ERCxXQUFpQixJQUFJO0lBRXBCLE1BQWEsS0FBSztRQUVELElBQUksQ0FBaUI7UUFDckIsS0FBSyxDQUFnQjtRQUNyQixHQUFHLENBQWtCO1FBQ3JCLElBQUksQ0FBaUI7UUFDckIsSUFBSSxDQUFpQjtRQUVyQixPQUFPLENBQWdCO1FBRXZDLFlBQWEsSUFBc0I7WUFFbEMsTUFBTSxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBRWhDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFFLENBQUM7WUFDckMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUUsQ0FBQztZQUMzQyxJQUFJLENBQUMsR0FBRyxHQUFLLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBRSxDQUFDO1lBQzdDLElBQUksQ0FBQyxJQUFJLEdBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFFLENBQUM7WUFDN0MsSUFBSSxDQUFDLElBQUksR0FBSSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUUsQ0FBQztZQUU3QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBRSxDQUFDLENBQUUsQ0FBQztRQUNyQyxDQUFDO1FBRU8sTUFBTTtZQUViLE1BQU0sS0FBSyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNuQyxNQUFNLE9BQU8sR0FBRyxLQUFLLEdBQUcsQ0FBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBRSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ2hGLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN2RSxDQUFDO0tBQ0Q7SUE3QlksVUFBSyxRQTZCakIsQ0FBQTtJQUVELE1BQWEsR0FBRztRQUVmLElBQUksQ0FBQztRQUFDLEtBQUssQ0FBQztRQUFDLEdBQUcsQ0FBQztRQUFDLElBQUksQ0FBQztRQUFDLElBQUksQ0FBQztRQUM3QixPQUFPLENBQUM7UUFFUixZQUFhLEtBQWE7WUFFekIsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxHQUFHLEdBQUssSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBSSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFFLENBQUM7WUFDcEcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUUsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFFLENBQUM7WUFDM0csSUFBSSxDQUFDLElBQUksR0FBSSxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFHLElBQUksRUFBRSxHQUFHLEVBQUssR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBRSxDQUFDO1lBQzlHLElBQUksQ0FBQyxJQUFJLEdBQUksSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRyxJQUFJLEVBQUUsR0FBRyxFQUFLLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUUsQ0FBQztZQUU5RyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBRSxFQUFFLENBQUUsQ0FBQztZQUNyQyxLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUUsSUFBSSxDQUFDLEtBQUssQ0FBRSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUUsR0FBRyxHQUFHLENBQUUsR0FBRyxHQUFHLENBQUUsQ0FBQztRQUNySCxDQUFDO0tBQ0Q7SUFoQlksUUFBRyxNQWdCZixDQUFBO0lBRVksT0FBRSxHQUFHLENBQUUsR0FBUyxFQUFRLEVBQUU7UUFFdEMsTUFBTSxNQUFNLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDOUMsTUFBTSxPQUFPLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDbkQsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEVBQUUsQ0FBRSxHQUFHLENBQUMsS0FBSyxDQUFFLENBQUM7UUFDcEMsTUFBTSxHQUFHLEdBQUssS0FBSyxDQUFDLEVBQUUsQ0FBRSxHQUFHLENBQUMsR0FBRyxDQUFFLENBQUM7UUFDbEMsTUFBTSxJQUFJLEdBQUksS0FBSyxDQUFDLEVBQUUsQ0FBRSxHQUFHLENBQUMsSUFBSSxDQUFFLENBQUM7UUFDbkMsTUFBTSxJQUFJLEdBQUksS0FBSyxDQUFDLEVBQUUsQ0FBRSxHQUFHLENBQUMsSUFBSSxDQUFFLENBQUM7UUFDbkMsTUFBTSxNQUFNLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBRSxFQUFFLENBQUM7UUFFNUYsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsQ0FBRSxNQUFNLEVBQUUsTUFBTSxDQUFFLEVBQUUsQ0FBQztJQUN6RSxDQUFDLENBQUE7QUFDRixDQUFDLEVBL0RnQixJQUFJLEtBQUosSUFBSSxRQStEcEIifQ==