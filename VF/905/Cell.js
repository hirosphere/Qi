
const 値セル群 = {};

値セル群.オブジェクトの型 = 型を作成
(
	function()
	{
		const プロトタイプ = this;

		プロトタイプ.初期化 = function()
		{
			const これ = this;
			
			これ.フィールドリスト = {};
			これ.ハッシュリスト = {};
		};

		//  //
		
		プロトタイプ.数値フィールドを追加 = function( フィールド名, ハッシュ名, 初期値, 省略値 )
		{
			const これ = this;
			const フィールド = 値セル群.数値の型.実体を作成( 初期値, 省略値 );
			これ.フィールドを追加( フィールド名, ハッシュ名, フィールド )
		};
		
		プロトタイプ.フィールドを追加 = function( フィールド名, ハッシュ名, アイテム )
		{
			const これ = this;
			これ.フィールドリスト[ フィールド名 ] = アイテム;
			if( ハッシュ名 ) これ.ハッシュリスト[ ハッシュ名 ] = アイテム;
			console.log( フィールド名, ハッシュ名, アイテム.値 );
　		};

		//  //

		プロトタイプ.保存値を得る = function()
		{
			const これ = this;
			return これ.値 === これ.省略値 ? null : これ.値;
		};

		プロトタイプ.保存値を与える = function( 値 )
		{
			const これ = this;
			これ.値 = ( 値 === undefined ? これ.省略値 : 値 );
		};
	}
);

値セル群.数値の型 = 型を作成
(
	function()
	{
		const プロトタイプ = this;

		プロトタイプ.初期化 = function( 初期値, 省略値 )
		{
			const これ = this;

			これ.値 = 初期値;
			これ.省略値 = 省略値;
		};

		プロトタイプ.保存値を得る = function()
		{
			const これ = this;
			return これ.値 === これ.省略値 ? null : これ.値;
		};

		プロトタイプ.保存値を与える = function( 値 )
		{
			const これ = this;
			これ.値 = ( 値 === undefined ? これ.省略値 : 値 );
		};
	}
);
