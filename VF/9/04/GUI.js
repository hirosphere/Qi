
let 運転制御盤1の型 = 型を作成
(
	function()
	{
		let この典型 = this;

		この典型.開始する = function( 幹エレメント, その他 )
		{
			let この実体 = this;

			let この枝 = Divを作成( 幹エレメント, { クラス: その他.クラス名 } );
			数値表示ペインを作成( この枝, その他.列車 );
			加速度指令ペインを作成( この枝, その他.列車 );
		};

		//

		let 数値表示ペインを作成 = function( 幹エレメント, 列車 )
		{
			let テーブル = 数値表示テーブルの型.作成( 幹エレメント );
			let 行 = テーブル.行を作成();
			行.項目を作成( "時速", 列車.時速 );
		};

		let 加速度リスト = [ -5, -3, -2, -1, 0, 1, 2, 3, 5 ];

		let 加速度指令ペインを作成 = function( 幹エレメント, 列車 )
		{
			let この枝 = Divを作成( 幹エレメント, {} );

			for( let 加速度 of 加速度リスト )
			{
				Buttonを作成( この枝, { 文: 加速度 } );
			}
		}
	}
);

let UIxの型 = 型を作成
(
	function()
	{
		let この典型 = this;

		この典型.開始する = function( 幹エレメント, モデル, クラス名 )
		{
			let この実体 = this;
			この実体.モデル = モデル;

			この実体.エレメント = Divを作成( 幹エレメント, { クラス: クラス名 } );
			Pを作成( この実体.エレメント, { 文: "UIx" } )
		};
	}
);

let 数値表示テーブルの型 = 型を作成
(
	function()
	{
		let この典型 = this;

		この典型.開始する = function( 幹エレメント, モデル, クラス名 )
		{
			let この実体 = this;
			この実体.モデル = モデル;

			let table = Tableを作成( 幹エレメント, { クラス: クラス名 } );
			この実体.tbody = TBodyを作成( table );
		};

		この典型.行を作成 = function()
		{
			return new 行の型( this.tbody );
		};

		let 行の型 = function( tbody )
		{
			let この実体 = this;
			let tr = TRを作成( tbody );

			この実体.項目を作成 = function( 表題, 値セル, 単位設定 )
			{
				return new 項目の型( tr, 表題, 値セル, 単位設定 );
			};
		}

		let 項目の型 = function( tr, 表題, 値セル, 単位設定 )
		{
			let td = TDを作成( tr, { 文: 表題 } );
		};
	}
);
