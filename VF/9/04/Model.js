
let ドキュメントの型 = 型を作成
(
	function()
	{
		let この型 = this;

		この型.開始する = function()
		{
			let この実体 = this;
			let コマ秒 = 0.05;


			この実体.列車 = 列車の型.作成();
			この実体.動力 = 動力の型.作成();

			function コマ処理()
			{
				この実体.列車.進歩する( コマ秒 );
			}
			間欠を設定( コマ処理, コマ秒 * 1000 );
		};
	}
);

let 列車の型 = 型を作成
(
	function()
	{
		let この型 = this;

		この型.開始する = function()
		{
			let この実体 = this;

			この実体.指令加速度 = 値の型.作成( 0 );
			この実体.加速減衰率 = 値の型.作成( 0.65 );

			この実体.加速度 = 値の型.作成( 0 );
			この実体.時速 = 値の型.作成( 0 );
		};

		この型.進歩する = function( 進歩秒 )
		{
			let この実体 = this;

			if( この実体.指令加速度.値 > 0 )
			{
				この実体.加速度.値を設定
				(
					この実体.指令加速度.値
				);

			}

			else if( この実体.指令加速度.値 <= 0 )
			{
				この実体.加速度.値を設定( この実体.指令加速度.値 );
			}

			let 時速 = この実体.時速.値 + この実体.加速度.値 * 進歩秒;
			この実体.時速.値を設定( Math.max( 0, 時速 ) );
	};
	}
);

let 動力の型 = 型を作成
(
	function()
	{
		let この型 = this;

		この型.開始する = function()
		{
			let この実体 = this;
		};
	}
);

let 動力駆動の型 = 型を作成
(
	function()
	{
		let この型 = this;

		この型.開始する = function()
		{
			let この実体 = this;
		};
	}
);

let 値の型 = 型を作成
(
	function()
	{
		let この型 = this;

		この型.開始する = function( 初期値 )
		{
			let この実体 = this;
			この実体.変更処理リスト = [];
			この実体.値 = 初期値;
		};

		この型.変更された = function( 処理 )
		{
			let この実体 = this;
			この実体.変更処理リスト.push( 処理 );
			処理();
		};

		この型.値を設定 = function( 値 )
		{
			let この実体 = this;
			if( この実体.値 == 値 )  return;

			この実体.値 = 値;
			この実体.値の変更を通知する();
		};

		この型.値の変更を通知する = function()
		{
			let この実体 = this;
			for( let 処理 of この実体.変更処理リスト )  処理();
		};
	}
);
